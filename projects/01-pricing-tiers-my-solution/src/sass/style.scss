// colors
$color-neutral-100: #fff;
$color-neutral-900: #1f3049;
$color-primary-400: #0066ff;

// font-families
$ff-sans: 'Open Sans', sans-serif;

// font-sizes
$fs-900: 3.75rem;   // 60px
$fs-800: 3rem;      // 48px
$fs-600: 1.5rem;    // 24px
$fs-500: 1.3125rem; // 21px
$fs-400: 1.125rem;  // 18px

// font-weights
$fw-400: 400;
$fw-700: 700;

// size/spacing values (Including the border-width)
$size-8: 0.5rem; 
$size-12: 0.75rem; // (not in design)
$size-16: 1rem;
$size-20: 1.25rem; 
$size-32: 2rem;  
$size-36: 2.25rem;


*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;

//form elements inherit all the font properties 
//removes all the user-agent-styles from headings and other elements
  font: inherit;
}


// as much as possible is set up on body to rely on inheritance as much as possible
body {
    font-size: $fs-400;
    font-weight: $fw-400;
    color: $color-neutral-900;
    background-color: $color-neutral-100;
    font-family: $ff-sans;
    text-align: center;
  }
  
  .container {
      //Think of the min() value as providing the maximum value a property can have.
    width: min(100% - 2rem, 60rem);
    //set up the left and right margin` does nothing with top and bottom
    margin-inline: auto;
  }

  .page-title {
      color: $color-primary-400;
      font-size: $fs-900;
      margin-block: $size-32;
  }

  .pricing-plans {
    border: $size-8 solid $color-primary-400;
    display: flex;
  }

  .tier {
      flex: 1;
      padding: $size-36;

      display: grid;
      gap: $size-20;

      &__title {
        text-transform: uppercase;
        font-weight: $fw-700;
        color: $color-primary-400;

        .inverted & {
            color: $color-neutral-100;
        }
      }

      &__feature-list {
          list-style: none;
      }

      &__list-item {
          //It is for the underscore - always do the decorative elements with CSS if you have the chance 
          // <hr> can be used, too 
          //:not(:last-child) means that the undescoring line would not be after the last item
          //& does not make children selectors it makes more complex selectors
        &:not(:last-child)::after {
        content:"";
        display: block;
        height: 1px;
        margin-block: $size-20;
        background-color: $color-neutral-900;
        //I have used the darkest color so I use opacity to make it lighter
        opacity: 0.2;
        }
      }

      &__price {
        font-size: $fs-800;
        font-weight: $fw-700;

        span {
            font-weight: $fw-400;
            font-size: $fs-600;
        }

    }
  }

  .button {
      cursor:pointer;
      border: 0;
      text-transform: uppercase;
      font-weight: $fw-700;
      color: $color-neutral-100;
      background-color: $color-primary-400;
      padding: 1em 1.2em;

      justify-self: center;

      .inverted & {
          color:$color-primary-400;
          background-color: $color-neutral-100;
      }
      &:hover,
      &:focus {
          background-color: rgb($color-neutral-900, 0.7);
          color:$color-neutral-100;
      }
  }

  .inverted {
      background-color: $color-primary-400;
      color:$color-neutral-100;
  }

